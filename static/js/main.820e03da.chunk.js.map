{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","useState","state","setState","className","style","container","focus","onMouseOver","onMouseOut","to","box","Error404","Junior","JuniorPlus","Message","props","message","avatar","src","alt","messageWraper","name","text","time","messageData","HW1","Affair","onClick","deleteAffairCallback","affair","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","newPerson","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","setText","showAlert","checked","setChecked","column","blue","disabled","PreJunior","PATH","Routes","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.820e03da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3u4UQ\",\"avatar\":\"Message_avatar__1QkTB\",\"messageWraper\":\"Message_messageWraper__37Udc\",\"text\":\"Message_text__42Xa7\",\"time\":\"Message_time__2A9xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__KvM_R\",\"box\":\"header_box__3mIsg\",\"focus\":\"header_focus__1WQey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__16yh9\",\"error\":\"Greeting_error__3Aj1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__G8tr_\",\"errorInput\":\"SuperInputText_errorInput__3sx-q\",\"error\":\"SuperInputText_error__1JqX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__34bpF\",\"column\":\"HW4_column__3NzKO\",\"testSpanError\":\"HW4_testSpanError__sBaj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2PCSt\",\"red\":\"SuperButton_red__1Xtq3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__RJY9m\",\"spanClassName\":\"SuperCheckbox_spanClassName___rn91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3l3WK\"};","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport style from './header.module.css'\r\n\r\nfunction Header() {\r\n\r\n    const [state, setState] = useState(false);\r\n\r\n    return (\r\n\r\n            <div className={`${style.container} ${state && style.focus}`} onMouseOver={() => setState(true)} onMouseOut={() => setState(false)}>\r\n\r\n                \r\n\r\n                <Link to='/pre-junior' >pre-junior</Link>\r\n                <Link to='/junior' >junior</Link>\r\n                <Link to='/junior_+' >junior +</Link>\r\n                <Link to='/' className={style.box}></Link>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","\r\n\r\nexport const Junior =() => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>Nice</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n\r\nexport const JuniorPlus =() => {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>DA</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype propsTypeMessage = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\n\r\nfunction Message(props: propsTypeMessage) {\r\n    return (\r\n        <div className={style.message}>\r\n            <div>\r\n                <img className={style.avatar} src={props.avatar} alt='avatar'></img>\r\n            </div>\r\n            <div className={style.messageWraper}>\r\n\r\n                <div className={style.name}>{props.name}</div>\r\n                <div className={style.text}>{props.message}</div>\r\n                <span className={style.time}>{props.time}</span>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'itatibus  eum explicabo autem num',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            \r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n               avatar={messageData.avatar}\r\n               name={messageData.name}\r\n               message={messageData.message}\r\n               time={messageData.time}\r\n            />\r\n            <Message\r\n               avatar={messageData.avatar}\r\n               name={messageData.name}\r\n               message={messageData.message}\r\n               time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport { AffairPriorityType } from './HW2'\r\n\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairPriorityType\r\n    deleteAffairCallback: Function\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n       props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            some text\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType , AffairPriorityType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairPriorityType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } \r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type AffairType = Array<AffairPriorityType>\r\n\r\nexport type FilterType = 'all' | 'high' | 'low' | 'middle'\r\n\r\n\r\nconst defaultAffairs: AffairType = [ \r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType, filter: FilterType): AffairType => {\r\n\r\n    if (filter === 'all') return affairs\r\n    else if (filter === 'high') return affairs.filter(el => el.priority === 'high')\r\n    else if (filter === 'low') return affairs.filter(el => el.priority === 'low')\r\n    else if (filter === 'middle') return affairs.filter(el => el.priority === 'middle')\r\n    \r\n    return affairs;\r\n}\r\nexport const deleteAffair = (affairs: AffairType, _id: number): AffairType => {\r\n    return affairs.filter(el => el._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType>(defaultAffairs) \r\n\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    \r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) \r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} \r\n) => {\r\n    const inputClass = error === ''? s.someClass: s.error\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3'\r\n\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { \r\n    const [name, setName] = useState<string>('')\r\n    \r\n    const [error, setError] = useState<string>('') \r\n\r\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>) => { \r\n        setName(e.currentTarget.value)   \r\n    }\r\n    const addUser = () => {\r\n\r\n        if( name.length === 0) {\r\n            setError('тут пусто тупой ты !')\r\n        } else {\r\n            setError('')\r\n            alert(`Hello  ${name}!`) \r\n            addUserCallback(name)\r\n            setName('')\r\n        }\r\n\r\n       \r\n        \r\n    }\r\n\r\n    const totalUsers = users.length \r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n\r\n    const [users, setUsers] = useState<UserType[]>([]) \r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newPerson = {_id: v1(), name: name}\r\n        setUsers((state) => {\r\n            return [...state, newPerson]\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n// import { Router } from 'react-router';\r\nimport {Route} from \"react-router-dom\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport { Routes as Switch } from 'react-router-dom';\r\nimport Error404 from './pages/Error404';\r\nimport { Junior } from './pages/Junior';\r\nimport { JuniorPlus } from './pages/JuniorPlus';\r\nimport PreJunior from \"./pages/PreJunior\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS : '/junior_+',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n            \r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/* exact нужен чтоб указать полное совподение (что после '/' ничего не будет) */}\r\n                <Route path={'/'} element={ <Navigate to={ PATH.PRE_JUNIOR }/> } />\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={ <PreJunior/> }/>\r\n                <Route path={PATH.JUNIOR} element={ <Junior/> }/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={ <JuniorPlus/> }/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path='*' element={ <Error404/> }/>///\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n                <Header/>\r\n\r\n                <Routes/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}